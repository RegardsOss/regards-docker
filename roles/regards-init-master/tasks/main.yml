---
- name: Create REGARDS basic structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0770'
    owner: "{{ role_regards_init_master_container_root_user }}"
    group: "{{ role_regards_init_master_container_root_group }}"
    setype: "{{ role_regards_init_master_setype }}"
    seuser: "{{ role_regards_init_master_seuser }}"
  with_items:
    - "{{ role_regards_init_master_config }}"
    - "{{ role_regards_init_master_stack }}"
    - "{{ role_regards_init_master_cli }}"
  become: true

- name: Get regards network info
  docker_network_info:
    name: "{{ role_regards_init_master_docker_network_name }}"
  register: docker_network_name_info
  become: true
  vars:
    ansible_python_interpreter: "env python{{ python_version }}"

- name: Should recreate regards network?
  ansible.builtin.set_fact:
    recreate_regards_network: "{{ docker_network_name_info.exists != true or docker_network_name_info.network.Driver != \"overlay\" or docker_network_name_info.network.Attachable != true or docker_network_name_info.network.IPAM.Config[0].Gateway != role_regards_init_master_docker_network_gateway or docker_network_name_info.network.IPAM.Config[0].Subnet != role_regards_init_master_docker_network_subnet }}"

- name: Remove regards network
  docker_network:
    name: "{{ role_regards_init_master_docker_network_name  }}"
    state: absent
  become: true
  when: recreate_regards_network|bool
  run_once: true
  vars:
    ansible_python_interpreter: "env python{{ python_version }}"

- name: Create regards network (fails if the REGARDS stack is deployed)
  docker_network:
    name: "{{ role_regards_init_master_docker_network_name }}"
    attachable: true
    driver: overlay
    ipam_config:
      - subnet: "{{ role_regards_init_master_docker_network_subnet }}"
        gateway: "{{ role_regards_init_master_docker_network_gateway }}"
  vars:
    ansible_python_interpreter: "env python{{ python_version }}"
  when: recreate_regards_network|bool

- name: Add dev CLI
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ role_regards_init_master_cli }}"
    mode: '0750'
    owner: "{{ role_regards_init_master_container_root_user }}"
    group: "{{ role_regards_init_master_container_root_group }}"
  with_items:
    - status.sh
    - .swarm_config_secrets_checksum.sh
    - .swarm_remove_volumes.sh
    - deploy.sh
    - update.sh
    - logs.sh
    - reboot.sh
    - exec.sh
    - perf.sh
    - health.sh
    - shutdown.sh
    - regenerate-ca.sh
    - configure-log-level.sh
  become: true

- name: Add to bashrc
  blockinfile:
    marker: "## {mark} added by ansible (autocomplete)"
    path: /root/.bashrc
    block: |
      if [ -f /etc/bash_completion.d/autocomplete.sh ]; then
        . /etc/bash_completion.d/autocomplete.sh
      fi
    backup: yes
  become: true

- name: Add autocomplete script
  template:
    src: autocomplete.sh
    dest: /etc/bash_completion.d/
    mode: '0750'
    owner: root
  become: true

