server {
{% if role_regards_front_is_ssl_defined|bool %}
  listen                    8080 ssl;
  ssl_certificate           /etc/ssl/server.crt;
  ssl_certificate_key       /etc/ssl/server.key;
  ssl_protocols             TLSv1.2 TLSv1.3;
  ssl_ciphers               "TLSv1.3:TLSv1.2:!aNULL:!MD5:!RC4";
  ssl_prefer_server_ciphers on;
  ssl_session_tickets       off;
{% else %}
  listen 8080;
{% endif %}
  # Handle only request when Host matches following value
  server_name               {{ role_regards_front_server_name }};
  add_header X-Xss-Protection "1; mode=block";
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-Content-Type-Options "nosniff";

  # Handle SWAGGER provided by Access Project
  location ~ /swagger-ui/(.*) {
      proxy_set_header X-Forwarded-Host $host:$server_port;
      set $regards_gateway {{ role_regards_gateway_uri }};
      proxy_pass http://$regards_gateway/api/v1/rs-access-project/swagger-ui/$1;
  }
  # Handle rs-access-project SWAGGER incorrect links
  location ~ ^/api/v1/rs-access-project/swagger/(?<mservice>([a-zA-Z-]+))/v3/api-docs$ {
      set $regards_gateway {{ role_regards_gateway_uri }};
      set $upstream http://$regards_gateway/api/v1/$mservice/v3/api-docs;
      proxy_pass $upstream;
      proxy_set_header X-Forwarded-Host $host:$server_port;
  }

  location ~ ^/api/v1/(?<mservice>(?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/).*)$ {
      set $regards_gateway {{ role_regards_gateway_uri }};
      set $upstream http://$regards_gateway/api/v1/$mservice$is_args$args;
      # Refuse requests if they contains /user/ but not when they contains /admin/
      set $test O;
      if ($http_referer ~ /admin/){
          set $test NO;   
      }
      if ($http_referer ~ /user/) {
          set $test "${test}K";
      }
      if ($test = OK){
          return 403;
      }
      proxy_pass $upstream;
      # Set headers
      proxy_set_header X-Forwarded-Host $host:{{ role_regards_front_public_server_port }};
      proxy_set_header X-Forwarded-Port {{ role_regards_front_public_server_port }};
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $http_connection;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Server $host;
  }

  location ~ ^/api/v1/(?<mservice>(?!(?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/)).*)$ {
      set $regards_gateway {{ role_regards_gateway_uri }};
      set $upstream http://$regards_gateway/api/v1/$mservice$is_args$args;
      proxy_pass $upstream;
      # Set headers
      proxy_set_header X-Forwarded-Host $host:{{ role_regards_front_public_server_port }};
      proxy_set_header X-Forwarded-Port {{ role_regards_front_public_server_port }};
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $http_connection;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Server $host;
  }

  location /Workers {
      root /var/www;
      # Cesium workers files should have cache enabled
  }

  # Disallow access to files starting with a dot
  location ~ /\. {
    deny all;
  }

  location / {
      root /var/www;
      # Always serve index.html for any request
      try_files $uri /index.html;
      
      # kill cache
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      if_modified_since off;
      expires off;
      etag off;
  }
}
