worker_processes auto;

pid /run/nginx.pid;

events {
    worker_connections 4096;
    use                epoll;
    multi_accept       on;
}

http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    # Docker embedded DNS server https://stackoverflow.com/questions/35744650/docker-network-nginx-resolver
    # https://stackoverflow.com/a/46664433/2294168
    # Set a variable then use it in proxy_pass to avoid DNS issue with docker swarm
    resolver {{ role_regards_dns_resolver }} ipv6=off valid=10s;

    include      /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format json_combined escape=json
    '{'
        '"logtime":"$time_local",'
        '"remoteHost":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
    '}';

    access_log /dev/stdout;
    error_log  /dev/stderr debug;

    gzip         on;
    gzip_disable "msie6";

    client_max_body_size 100M;

    server {
        listen 8080 default_server;

        location ~ ^(/zuul)?/api/v1/((?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/).*)$ {
            set $upstream http://{{ role_regards_gateway_uri }}$1/api/v1/$2$is_args$args;
            # Refuse requests if they contains /user/ but not when they contains /admin/
            set $test O;
            if ($http_referer ~ /admin/){
                set $test NO;   
            }
            if ($http_referer ~ /user/) {
                set $test "${test}K";
            }
            if ($test = OK){
                return 403;
            }
            proxy_pass $upstream;
            # All forwarded headers are supplied by frontal server and just propagated here.
            # Spring HATEAOS web linker uses Forwarded or X-Forwarded-* headers to build URI
            # See org.springframework.web.filter.ForwardedHeaderFilter
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }

        location ~ ^(/zuul)?/api/v1/((?!(?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/)).*)$ {
            set $upstream http://{{ role_regards_gateway_uri }}$1/api/v1/$2$is_args$args;
            proxy_pass $upstream;
            # All forwarded headers are supplied by frontal server and just propagated here.
            # Spring HATEAOS web linker uses Forwarded or X-Forwarded-* headers to build URI
            # See org.springframework.web.filter.ForwardedHeaderFilter
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;

            # TODO define an interceptor for CATALOG download only  
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_intercept_errors on;
            # Hide the mod_zip header from the client, it is only used
            # within nginx to trigger the mod_zip code.
            proxy_hide_header X-Archive-Files;
        }

        # mod_zip location for REGARDS file download
        location ~ "^/regards/(?<url>.*)$" {
        #     internal;
            #proxy_pass http://{{ role_regards_gateway_uri }}/zuul/api/v1/rs-catalog/$url$is_args$args;
            proxy_pass http://{{ role_regards_gateway_uri }}/zuul/api/v1/rs-storage/$url$is_args$args;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_intercept_errors on;
        }

        # mod_zip location for S3 file download
        # TODO

        # Handle SWAGGER provided by the gateway
        location /swagger-ui/ {
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_pass http://{{ role_regards_gateway_uri }}/swagger-ui/;
        }
        # Homepage SWAGGER (redirect)
        location /swagger-ui.html {
            proxy_pass http://{{ role_regards_gateway_uri }}/swagger-ui.html;
             # Set a lot of headers to get successful redirection
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Server $host;
        }
        # Config file
        location /v3/api-docs/swagger-config {
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_pass http://{{ role_regards_gateway_uri }}/v3/api-docs/swagger-config;
        }

        location /Workers {
            root /var/www;
            # Cesium workers files should have cache enabled
        }

        location / {
            root /var/www;
            # Always serve index.html for any request
            try_files $uri /index.html;
            
            # kill cache
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
        }
    }

}
