worker_processes auto;

pid /tmp/nginx.pid;

events {
    worker_connections 4096;
    use                epoll;
    multi_accept       on;
}

http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    # Docker embedded DNS server https://stackoverflow.com/questions/35744650/docker-network-nginx-resolver
    # https://stackoverflow.com/a/46664433/2294168
    # Set a variable then use it in proxy_pass to avoid DNS issue with docker swarm
    resolver {{ role_regards_dns_resolver }} ipv6=off valid=10s;

    include      /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format json_combined escape=json
    '{'
        '"logtime":"$time_local",'
        '"remoteHost":"$proxy_add_x_forwarded_for",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
    '}';
    access_log /var/log/nginx/access.log json_combined;
    error_log /var/log/nginx/error.log error;

    gzip         on;
    gzip_disable "msie6";

    client_max_body_size 100M;

    server {
{% if role_regards_front_is_ssl_defined|bool %}
        listen                    8080 ssl;
        server_name               {{ role_regards_front_server_name }};
        ssl_certificate           /etc/ssl/server.crt;
        ssl_certificate_key       /etc/ssl/server.key;
        ssl_protocols             TLSv1.2 TLSv1.3;
        ssl_ciphers               "TLSv1.3:TLSv1.2:!aNULL:!MD5:!RC4";
        ssl_prefer_server_ciphers on;
        ssl_session_tickets       off;
{% else %}
        listen 8080 default_server;
{% endif %}
        add_header X-Xss-Protection "1; mode=block";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";

        # Handle SWAGGER provided by Access Project
        location /swagger-ui/ {
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_pass http://{{ role_regards_gateway_uri }}/api/v1/rs-access-project/swagger-ui/;

        }
        # Handle rs-access-project SWAGGER incorrect links
        location ~ ^/api/v1/rs-access-project/swagger/(?<mservice>([a-zA-Z-]+))/v3/api-docs$ {
            set $upstream http://{{ role_regards_gateway_uri }}/api/v1/$mservice/v3/api-docs;
            proxy_pass $upstream;
            proxy_set_header X-Forwarded-Host $host:$server_port;
        }

        location ~ ^/api/v1/(?<mservice>(?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/).*)$ {
            set $upstream http://{{ role_regards_gateway_uri }}/api/v1/$mservice$is_args$args;
            # Refuse requests if they contains /user/ but not when they contains /admin/
            set $test O;
            if ($http_referer ~ /admin/){
                set $test NO;   
            }
            if ($http_referer ~ /user/) {
                set $test "${test}K";
            }
            if ($test = OK){
                return 403;
            }
            proxy_pass $upstream;
            # Set headers
            proxy_set_header X-Forwarded-Host $host:{{ role_regards_front_public_server_port }};
            proxy_set_header X-Forwarded-Port {{ role_regards_front_public_server_port }};
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Server $host;
        }

        location ~ ^/api/v1/(?<mservice>(?!(?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/)).*)$ {
            set $upstream http://{{ role_regards_gateway_uri }}/api/v1/$mservice$is_args$args;
            proxy_pass $upstream;
            # Set headers
            proxy_set_header X-Forwarded-Host $host:{{ role_regards_front_public_server_port }};
            proxy_set_header X-Forwarded-Port {{ role_regards_front_public_server_port }};
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Server $host;
        }

        location /Workers {
            root /var/www;
            # Cesium workers files should have cache enabled
        }

        location / {
            root /var/www;
            # Always serve index.html for any request
            try_files $uri /index.html;
            
            # kill cache
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
        }
    }

}
