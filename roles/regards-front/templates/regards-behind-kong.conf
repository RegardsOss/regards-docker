server {
  listen 8080;
  # Handle only request when Host matches following value
  server_name {{ role_regards_front_server_name }};

  # Handle SWAGGER provided by Access Project
  location ~ /swagger-ui/(.*) {
      proxy_set_header X-Forwarded-Host $host:$server_port;
      set $regards_gateway {{ role_regards_gateway_uri }};
      proxy_pass http://$regards_gateway/api/v1/rs-access-project/swagger-ui/$1;
  }
  # Handle rs-access-project SWAGGER incorrect links
  location ~ ^/api/v1/rs-access-project/swagger/(?<mservice>([a-zA-Z-]+))/v3/api-docs$ {
      set $regards_gateway {{ role_regards_gateway_uri }};
      set $upstream http://$regards_gateway/api/v1/$mservice/v3/api-docs;
      proxy_pass $upstream;
      proxy_set_header X-Forwarded-Host $host:$server_port;
  }

  location ~ ^/api/v1/(?<mservice>(?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/).*)$ {
      set $regards_gateway {{ role_regards_gateway_uri }};
      set $upstream http://$regards_gateway/api/v1/$mservice$is_args$args;
      # Refuse requests if they contains /user/ but not when they contains /admin/
      set $test O;
      if ($http_referer ~ /admin/){
          set $test NO;   
      }
      if ($http_referer ~ /user/) {
          set $test "${test}K";
      }
      if ($test = OK){
          return 403;
      }
      proxy_pass $upstream;
      # All forwarded headers are supplied by frontal server and just propagated here.
      # Spring HATEAOS web linker uses Forwarded or X-Forwarded-* headers to build URI
      # See org.springframework.web.filter.ForwardedHeaderFilter
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $http_connection;
  }

  location ~ ^/api/v1/(?<mservice>(?!(?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/)).*)$ {
      set $regards_gateway {{ role_regards_gateway_uri }};
      set $upstream http://$regards_gateway/api/v1/$mservice$is_args$args;
      proxy_pass $upstream;
      # All forwarded headers are supplied by frontal server and just propagated here.
      # Spring HATEAOS web linker uses Forwarded or X-Forwarded-* headers to build URI
      # See org.springframework.web.filter.ForwardedHeaderFilter
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $http_connection;

      # TODO define an interceptor for CATALOG download only  
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_intercept_errors on;
      # Hide the mod_zip header from the client, it is only used
      # within nginx to trigger the mod_zip code.
      proxy_hide_header X-Archive-Files;
  }

  # mod_zip location for REGARDS file download
  location ~ "^/regards/(?<url>.*)$" {
  #     internal;
      #proxy_pass http://{{ role_regards_gateway_uri }}/api/v1/rs-catalog/$url$is_args$args;
      set $regards_gateway {{ role_regards_gateway_uri }};
      proxy_pass http://$regards_gateway/api/v1/rs-storage/$url$is_args$args;
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_intercept_errors on;
  }

  # mod_zip location for S3 file download
  # TODO

  location /Workers {
      root /var/www;
      # Cesium workers files should have cache enabled
  }

  # Disallow access to files starting with a dot
  location ~ /\. {
    deny all;
  }

  location / {
      root /var/www;
      # Always serve index.html for any request
      try_files $uri /index.html;
      
      # Protect static files - no need to do it on rs-gateway proxified endpoints
      # as spring cloud already provides theses headers
      add_header X-Xss-Protection "1; mode=block";
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-Content-Type-Options "nosniff";
      # kill cache
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      if_modified_since off;
      expires off;
      etag off;
  }
}
