loopback_users.guest = false
listeners.tcp.default = 5672
management.tcp.port = 15672
management.load_definitions = /etc/rabbitmq/definitions.json

{% set ns = namespace(node_id=1) %}
{% if role_regards_rabbitmq_config_rabbitmq.global_service is defined %}
{% if role_regards_rabbitmq_config_rabbitmq.node_label_placement_constraint is defined %}
# Due to a bug in Docker Swarm + a bug in airlang, we cannot use round-robin DNS.
# So he have to list all RabbitMQ nodes 
{% for hostname in groups['all'] %}
{% if hostvars[hostname].ansible_host is defined and hostvars[hostname].labels is defined %}
{% for constraintKey, constraintValue in hostvars[hostname].labels.items() %}
{% if constraintKey == role_regards_rabbitmq_config_rabbitmq.node_label_placement_constraint.key and constraintValue == role_regards_rabbitmq_config_rabbitmq.node_label_placement_constraint.value %}
cluster_formation.classic_config.nodes.{{ ns.node_id }} = rabbit@rs-rabbitmq-{{ hostvars[hostname].ansible_host }}
{% set ns.node_id = ns.node_id + 1 %}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
{% else %}
{% for hostname in groups['all'] %}
cluster_formation.classic_config.nodes.{{ ns.node_id }} = rabbit@rs-rabbitmq-{{ hostvars[hostname].ansible_host }}
{% set ns.node_id = ns.node_id + 1 %}
{% endfor %}
{% endif %}
{% endif %}
