version: '3.7'
services:

{% if role_regards_stack_cots.elasticsearch is defined %}
  rs-elasticsearch:
    image: {{ role_regards_stack_registry }}/regards-elasticsearch:{{ role_regards_stack_cots.elasticsearch.tag | default("latest") }}
{%if (role_regards_stack_cots.elasticsearch.configuration | default({})).labels is defined %}
    labels:
{% for key, value in role_regards_stack_cots.elasticsearch.configuration.labels.items() %}
      {{ key }}: "{{value}}"
{% endfor %}
{% endif %}
    user: "{{ role_regards_stack_container_run_uid }}:{{ role_regards_stack_container_run_gid }}"
{% if role_regards_stack_cots.elasticsearch.global_service is defined %}
    hostname: "rs-elasticsearch-{{ '{{' }}.Node.Hostname{{ '}}' }}"
{% else %}
    hostname: rs-elasticsearch
{% endif %}
    read_only: true
{% if role_regards_stack_cots.elasticsearch.node_label_placement_constraint is defined or role_regards_stack_cots.elasticsearch.global_service is defined %}
    deploy:
{% if role_regards_stack_cots.elasticsearch.global_service is defined %}
      mode: global
      endpoint_mode: dnsrr
{% endif %}
{% if role_regards_stack_cots.elasticsearch.node_label_placement_constraint is defined %}
      placement:
        constraints:
          - node.labels.{{ role_regards_stack_cots.elasticsearch.node_label_placement_constraint.key }} == {{ role_regards_stack_cots.elasticsearch.node_label_placement_constraint.value }}
{% endif %}
{% endif %}
    networks:
      - {{ role_regards_stack_docker_network_name }}
    volumes:
{% if role_regards_stack_cots.elasticsearch.global_service is defined %}
      - {{ role_regards_stack_workspace_local }}elasticsearch/data:/usr/share/elasticsearch/data
      - {{ role_regards_stack_workspace_local }}elasticsearch/backup:/usr/share/elasticsearch/backup
{% else %}
      - {{ role_regards_stack_workspace_network }}elasticsearch/data:/usr/share/elasticsearch/data
      - {{ role_regards_stack_workspace_network }}elasticsearch/backup:/usr/share/elasticsearch/backup
{% endif %}
      - {{ role_regards_stack_workspace_local }}elasticsearch/tmpjna:/tmpjna
      - {{ role_regards_stack_config }}elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - type: tmpfs
        target: /tmp
      - type: tmpfs
        target: /usr/share/elasticsearch/logs
{% if role_regards_stack_cots.elasticsearch.http is defined or role_regards_stack_cots.elasticsearch.client is defined %}
    ports:
{% if role_regards_stack_cots.elasticsearch.http is defined %}
      - "{{ role_regards_stack_cots.elasticsearch.http }}:9200"
{% endif %}
{% if role_regards_stack_cots.elasticsearch.client is defined %}
      - "{{ role_regards_stack_cots.elasticsearch.client }}:9300"
{% endif %}
{% endif %}
    environment:
      - "node.name=rs-elasticsearch-{{ '{{' }}.Node.Hostname{{ '}}' }}"
      - cluster.name={{ role_regards_stack_cots_configuration.elasticsearch.cluster_name }}
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms{{ role_regards_stack_cots.elasticsearch.memoryLimit | default("2000m") }} -Xmx{{ role_regards_stack_cots.elasticsearch.memoryLimit | default("2000m") }} -Djna.tmpdir=/tmpjna"
    logging:
{% if role_regards_stack_cots.elasticsearch.logging is defined %}
      {{ role_regards_stack_cots.elasticsearch.logging | to_nice_yaml | indent(6) }}
{% else %}
      options:
        max-size: "10m"
        max-file: "10"
{% endif %}
{% endif %}

{% if role_regards_stack_cots.kibana is defined %}
  rs-kibana:
    image: {{ role_regards_stack_registry }}/regards-kibana:{{ role_regards_stack_cots.kibana.tag | default("latest") }}
{%if (role_regards_stack_cots.kibana.configuration | default({})).labels is defined %}
    labels:
{% for key, value in role_regards_stack_cots.kibana.configuration.labels.items() %}
      {{ key }}: "{{value}}"
{% endfor %}
{% endif %}
    user: "{{ role_regards_stack_container_run_uid }}:{{ role_regards_stack_container_run_gid }}"
    hostname: rs-kibana
    read_only: true
    networks:
      - {{ role_regards_stack_docker_network_name }}
    volumes:
      - type: tmpfs
        target: /usr/share/kibana/data/
{% if role_regards_stack_cots.kibana.http is defined %}
    ports:
      - "{{ role_regards_stack_cots.kibana.http }}:5601"
{% endif %}
    logging:
{% if role_regards_stack_cots.kibana.logging is defined %}
      {{ role_regards_stack_cots.kibana.logging | to_nice_yaml | indent(6) }}
{% else %}
      options:
        max-size: "10m"
        max-file: "10"
{% endif %}
{% if role_regards_stack_cots.kibana.node_label_placement_constraint is defined %}
    deploy:
      placement:
        constraints:
          - node.labels.{{ role_regards_stack_cots.kibana.node_label_placement_constraint.key }} == {{ role_regards_stack_cots.kibana.node_label_placement_constraint.value }}
{% endif %}
{% endif %}
