version: '3.9'

services:
{% for worker in role_regards_stack_workers %}
  {{ worker.name }}:
    image: {{ worker.docker_registry | default(role_regards_stack_registry) }}/{{ worker.image | default(worker.name) }}:{{ worker.tag }}
{% if (worker.configuration | default({})).labels is defined %}
    labels:
{%   for key, value in worker.configuration.labels.items() %}
      {{ key }}: "{{value}}"
{%   endfor %}
{% endif %}
{% if worker.command is defined %}
    command: {{ worker.command }}
{% endif %}
    user: "{{ role_regards_stack_container_run_uid }}:{{ role_regards_stack_container_run_gid }}"
    hostname: {{ worker.name }}
    read_only: true
{% if role_regards_stack_enable_cots_healthcheck and worker.healthcheck is defined %}
    healthcheck:
      {{ worker.healthcheck | to_nice_yaml | indent(6) }}
{% endif %}
    deploy:
      restart_policy:
        condition: any
        delay: {{ role_regards_stack_restart_policy.delay }}
        max_attempts: {{ role_regards_stack_restart_policy.max_attempts }}
        window: {{ role_regards_stack_restart_policy.window }}
{% if worker.resources is defined %}
      resources:
        {{ worker.resources | to_nice_yaml | indent(8) }}
{% endif %}
      replicas: {{ worker.replicas | default(1) }}
{% if worker.node_label_placement_constraint is defined %}
      placement:
        constraints:
          - node.labels.{{ worker.node_label_placement_constraint.key }} == {{ worker.node_label_placement_constraint.value }}
{% endif %}
    networks:
      - {{ role_regards_stack_docker_network_name }}
{% if ((worker.configuration | default({})).environment is defined) or (worker.jdwp is defined) or (worker.get('venv_replication', True) == False) %}
    environment:
      - REPLICATION_INSTANCE_ID={{ '{{.Task.Slot}}' }}
{%   if worker.jdwp is defined %}
      - BPL_DEBUG_ENABLED=true
{%   endif %}
{%   if (worker.configuration | default({})).environment is defined %}
{%     for key, value in worker.configuration.environment.items() %}
      {{ key }}: "{{value}}"
{%     endfor %}
{%   endif %}
{% endif %}
    volumes:
      - {{ role_regards_stack_workspace_local }}regards/workers/{{ worker.name }}/logs:/logs
{% if worker.volumes is defined %}
{%   for volume in worker.volumes %}
      - {{ volume.source }}:{{ volume.destination }}
{%   endfor %}
{% endif %}
      - type: tmpfs
        target: /tmp
    configs:
      - source: rs_workers_application.yml
        target: /tmp/application.yml
{% if worker.config is defined %}
      - source: rs_conf_{{ worker.name }}.yml
        target: /tmp/{{ worker.name }}.yml
{% endif %}
{% if worker.configs is defined %}
{%   for config in worker.configs %}
      - source: conf_{{ config.source }}
        target: {{ config.destination }}
{%   endfor %}
{% endif %}
{% if worker.secrets is defined %}
    secrets:
{%   for secret in worker.secrets %}
      - source: secret_{{ secret.source }}
        target: {{ secret.destination }}
{%   endfor %}
{% endif %}
{% if worker.jdwp is defined %}
    ports:
      - "{{ worker.jdwp }}:8000"
{% endif %}
{% if role_regards_stack_initialize_default_logging|bool or worker.logging is defined %}
    logging:
{%   if worker.logging is defined %}
      {{ worker.logging | to_nice_yaml | indent(6) }}
{%   else %}
      options:
        max-size: "10m"
        max-file: "10"
{%   endif %}
{% endif %}
{% endfor %}
