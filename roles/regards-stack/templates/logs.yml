version: '3.7'
services:

{% if role_regards_stack_cots.elasticsearch_logs is defined %}
  rs-logs-elasticsearch:
    image: {{role_regards_stack_registry}}/regards-elasticsearch:{{ role_regards_stack_cots.elasticsearch_logs.tag | default("latest") }}
    user: "{{role_regards_stack_container_run_uid}}:{{role_regards_stack_container_run_gid}}"
{% if role_regards_stack_cots.rabbitmq.global_service is defined %}
    hostname: "rs-logs-elasticsearch-{{ '{{' }}.Node.Hostname{{ '}}' }}"
{% else %}
    hostname: rs-logs-elasticsearch
{% endif %}
    read_only: true
{% if role_regards_stack_cots.elasticsearch_logs.node_label_placement_constraint is defined or role_regards_stack_cots.elasticsearch_logs.global_service is defined %}
    deploy:
{% if role_regards_stack_cots.elasticsearch_logs.global_service is defined %}
      mode: global
      endpoint_mode: dnsrr
{% endif %}
{% if role_regards_stack_cots.elasticsearch_logs.node_label_placement_constraint is defined %}
      placement:
        constraints:
          - node.labels.{{ role_regards_stack_cots.elasticsearch_logs.node_label_placement_constraint.key }} == {{ role_regards_stack_cots.elasticsearch_logs.node_label_placement_constraint.value }}
{% endif %}
{% endif %}
    networks:
      - {{ role_regards_stack_docker_network_name }}
    volumes:
{% if role_regards_stack_cots.elasticsearch_logs.global_service is defined %}
      - {{ role_regards_stack_workspace_local }}elasticsearch/data-logs:/usr/share/elasticsearch/data
      - {{ role_regards_stack_workspace_local }}elasticsearch/backup-logs:/usr/share/elasticsearch/backup
{% else %}
      - {{ role_regards_stack_workspace_network }}elasticsearch/data-logs:/usr/share/elasticsearch/data
      - {{ role_regards_stack_workspace_network }}elasticsearch/backup-logs:/usr/share/elasticsearch/backup
{% endif %}
      - {{ role_regards_stack_workspace_local }}elasticsearch/tmpjna-logs:/tmpjna
      - {{ role_regards_stack_config }}elasticsearch/elasticsearch-logs.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - type: tmpfs
        target: /tmp
      - type: tmpfs
        target: /usr/share/elasticsearch/logs
{% if role_regards_stack_cots.elasticsearch_logs.http is defined or role_regards_stack_cots.elasticsearch_logs.client is defined %}
    ports:
{% if role_regards_stack_cots.elasticsearch_logs.http is defined %}
      - "{{ role_regards_stack_cots.elasticsearch_logs.http }}:9200"
{% endif %}
{% if role_regards_stack_cots.elasticsearch_logs.client is defined %}
      - "{{ role_regards_stack_cots.elasticsearch_logs.client }}:9300"
{% endif %}
{% endif %}
    environment:
      - "node.name=rs-logs-elasticsearch-{{ '{{' }}.Node.Hostname{{ '}}' }}"
      - cluster.name={{ role_regards_stack_cots_configuration.elasticsearch_logs.cluster_name }}
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms{{ role_regards_stack_cots.elasticsearch_logs.memoryLimit | default("500m") }} -Xmx{{ role_regards_stack_cots.elasticsearch_logs.memoryLimit | default("500m") }} -Djna.tmpdir=/tmpjna"
    logging:
      options:
        max-size: "10m"
        max-file: "10"
{% endif %}

{% if role_regards_stack_cots.fluent is defined %}
  rs-fluent:
    image: {{role_regards_stack_registry}}/regards-fluent:{{ role_regards_stack_cots.fluent.tag | default("latest") }}
    user: "{{role_regards_stack_container_run_uid}}:{{role_regards_stack_container_run_gid}}"
    hostname: rs-fluent
    read_only: true
{% if not role_regards_stack_all_logs_inside_same_network_storage|bool or role_regards_stack_cots.fluent.node_label_placement_constraint is defined %}
    deploy:
{% if not role_regards_stack_all_logs_inside_same_network_storage|bool %}
      mode: global
{% endif %}
{% if role_regards_stack_cots.fluent.node_label_placement_constraint is defined %}
      placement:
        constraints:
          - node.labels.{{ role_regards_stack_cots.fluent.node_label_placement_constraint.key }} {{ role_regards_stack_cots.fluent.node_label_placement_constraint.equality_operator | default('==') }} {{ role_regards_stack_cots.fluent.node_label_placement_constraint.value }}
{% endif %}
{% endif %}
    networks:
      - {{ role_regards_stack_docker_network_name }}
    volumes:
      - {{ role_regards_stack_config }}fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
      - {{ role_regards_stack_workspace_local }}regards/logs/config:/logs/config
      - {{ role_regards_stack_workspace_local }}regards/logs/registry:/logs/registry
      - {{ role_regards_stack_workspace_local }}regards/logs/gateway:/logs/gateway
      - {{ role_regards_stack_workspace_local }}regards/logs/admin-instance:/logs/admin-instance
      - {{ role_regards_stack_workspace_local }}regards/logs/admin:/logs/admin
      - {{ role_regards_stack_workspace_local }}regards/logs/authentication:/logs/authentication
      - {{ role_regards_stack_workspace_local }}regards/logs/dam:/logs/dam
      - {{ role_regards_stack_workspace_local }}regards/logs/notifier:/logs/notifier
      - {{ role_regards_stack_workspace_local }}regards/logs/fem:/logs/fem
      - {{ role_regards_stack_workspace_local }}regards/logs/catalog:/logs/catalog
      - {{ role_regards_stack_workspace_local }}regards/logs/access-instance:/logs/access-instance
      - {{ role_regards_stack_workspace_local }}regards/logs/access-project:/logs/access-project
      - {{ role_regards_stack_workspace_local }}regards/logs/front:/logs/front
      - {{ role_regards_stack_workspace_local }}regards/logs/storage:/logs/storage
      - {{ role_regards_stack_workspace_local }}regards/logs/order:/logs/order
      - {{ role_regards_stack_workspace_local }}regards/logs/ingest:/logs/ingest
      - {{ role_regards_stack_workspace_local }}regards/logs/dataprovider:/logs/dataprovider
{% for worker in role_regards_stack_workers %}
      - {{ role_regards_stack_workspace_local }}regards/workers/{{ worker.name }}/logs:/logs/{{ worker.name }}
{% endfor %}
      - type: tmpfs
        target: /tmp
      - type: tmpfs
        target: /fluentd/logs
    logging:
      options:
        max-size: "10m"
        max-file: "10"
{% endif %}



{% if role_regards_stack_cots.kibana_logs is defined %}
  rs-logs-kibana:
    image: {{role_regards_stack_registry}}/regards-kibana:{{ role_regards_stack_cots.kibana_logs.tag | default("latest") }}
    user: "{{role_regards_stack_container_run_uid}}:{{role_regards_stack_container_run_gid}}"
    hostname: rs-logs-kibana
    read_only: true
{% if role_regards_stack_cots.kibana_logs.node_label_placement_constraint is defined %}
    deploy:
      placement:
        constraints:
          - node.labels.{{ role_regards_stack_cots.kibana_logs.node_label_placement_constraint.key }} == {{ role_regards_stack_cots.kibana_logs.node_label_placement_constraint.value }}
{% endif %}
    networks:
      - {{ role_regards_stack_docker_network_name }}
    volumes:
{% if role_regards_stack_cots.elasticsearch_logs.get("legacy", false) == false %}
      - type: tmpfs
        target: /usr/share/kibana/data/
{% else %}
      - type: tmpfs
        target: /usr/share/kibana/optimize/
{% endif %}
    environment:
      - ELASTICSEARCH_URL=http://rs-logs-elasticsearch:9200
{% if role_regards_stack_cots.kibana_logs.http is defined %}
    ports:
      - "{{ role_regards_stack_cots.kibana_logs.http }}:5601"
{% endif %}
    logging:
      options:
        max-size: "10m"
        max-file: "10"
{% endif %}
