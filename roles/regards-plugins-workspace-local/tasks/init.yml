---

- name: Create REGARDS structure
  ansible.builtin.file:
    path: "{{ role_regards_plugins_workspace_local_workspace_local }}regards/plugins/"
    state: directory
    mode: '0750'
    owner: "{{ role_regards_plugins_workspace_local_container_root_user }}"
    group: "{{ role_regards_plugins_workspace_local_container_root_group }}"
    setype: "{{ role_regards_plugins_workspace_local_setype }}"
    seuser: "{{ role_regards_plugins_workspace_local_seuser }}"
  become: true

- name: Create REGARDS plugins folders
  ansible.builtin.file:
    path: "{{ role_regards_plugins_workspace_local_workspace_local }}regards/plugins/{{ item }}"
    state: directory
    # Allow root and non root to write in this folder. Why ?
    # These folders are mounted to containers;  but the parent folder too while deploying plugins
    mode: '2777'
    owner: "{{ role_regards_plugins_workspace_local_container_run_user }}"
    group: "{{ role_regards_plugins_workspace_local_container_run_group }}"
    setype: "{{ role_regards_plugins_workspace_local_setype }}"
    seuser: "{{ role_regards_plugins_workspace_local_seuser }}"
  with_items:
    - "{{ role_regards_plugins_workspace_local_microservice_having_plugin }}"
  become: true

- name: Run plugins container
  docker_container:
    name: "{{ item.image }}"
    image: "{{ role_regards_plugins_workspace_local_docker_registry }}/{{ item.image }}:{{ item.tag }}"
    pull: true
    cleanup: true
    volumes:
      - "{{ role_regards_plugins_workspace_local_workspace }}:/regards-plugins"
    detach: false
    # container_default_behavior: no_defaults
    init: false
    interactive: false
    # For now, let's just retry few times before killing install
    restart_retries: 10
    restart_policy: on-failure
  register: plugin_output
  # Display the task as Changed on ansible log only when there is "Plugin successfully copied" inside the log
  failed_when: plugin_output.failed
  changed_when: (plugin_output.container is defined and 'copied' in plugin_output.container.Output) or (plugin_output.ansible_facts is defined and 'copied' in plugin_output.ansible_facts.docker_container.Output)
  with_items:
    - "{{ role_regards_plugins_workspace_local_plugins }}"
  vars:
    ansible_python_interpreter: "env python{{ python_version }}"

- name: Ensure files are 0555
  ansible.builtin.command: find {{ role_regards_plugins_workspace_local_workspace }} -type f -exec chmod 0555 {} \;
  become: true
  register: fix_access_rights
  changed_when: fix_access_rights.rc != 0
  failed_when: fix_access_rights.rc != 0
