---
role_regards_init_nfs_workspaces_container_run_user: "{{ group_container_run_user }}"
role_regards_init_nfs_workspaces_container_run_group: "{{ group_container_run_group }}"

role_regards_init_nfs_workspaces_tmp_folder: "{{ group_workdir_local }}{{ group_stack_name }}/tmp/"
role_regards_init_nfs_workspaces_container_root_user: "{{ group_container_root_user }}"
role_regards_init_nfs_workspaces_container_root_group: "{{ group_container_root_group }}"

role_regards_init_nfs_workspaces_setype: "{{ group_setype }}"
role_regards_init_nfs_workspaces_seuser: "{{ group_seuser }}"

role_regards_init_nfs_workspaces_validate_certs: "{{ group_validate_certs | default(lookup('ansible.builtin.env', 'DOCKER_TLS_VERIFY')|default(false, true)) }}"

role_regards_init_nfs_workspaces_registry: "{{ group_docker_registry }}"
role_regards_init_nfs_workspaces_image_version: "{{ (group_docker_cots.bash | default({})).get('tag', global_regards.version) }}"

# We're outside namespace - recompute run user and group
role_regards_init_nfs_workspaces_run_uid: "{{ group_container_run_uid|int + name_space_uid|int }}"
role_regards_init_nfs_workspaces_run_gid: "{{ group_container_run_gid|int + name_space_gid|int }}"

role_regards_init_nfs_workspaces_top_level_nfs_servers: "{{  (group_docker_mounts | default({})).get('nfs', []) }}"

role_regards_init_nfs_workspaces_volume_elasticsearch: "{{  (group_docker_mounts | default({})).get('elasticsearch', {}) }}"
role_regards_init_nfs_workspaces_volume_elasticsearch_data: "{{  role_regards_init_nfs_workspaces_volume_elasticsearch.get('data', {}) }}"
role_regards_init_nfs_workspaces_volume_elasticsearch_backup: "{{  role_regards_init_nfs_workspaces_volume_elasticsearch.get('backup', {}) }}"

role_regards_init_nfs_workspaces_volume_elasticsearch_logs: "{{  (group_docker_mounts | default({})).get('elasticsearch_logs', {}) }}"
role_regards_init_nfs_workspaces_volume_elasticsearch_logs_data: "{{  role_regards_init_nfs_workspaces_volume_elasticsearch_logs.get('data', {}) }}"
role_regards_init_nfs_workspaces_volume_elasticsearch_logs_backup: "{{  role_regards_init_nfs_workspaces_volume_elasticsearch_logs.get('backup', {}) }}"

role_regards_init_nfs_workspaces_volume_rabbitmq_data: "{{ (group_docker_mounts | default({})).get('rabbitmq', {}) }}"
role_regards_init_nfs_workspaces_volume_minio_data: "{{ (group_docker_mounts | default({})).get('minio', [])[0] | default({}) }}"
role_regards_init_nfs_workspaces_volume_postgres_data: "{{ (group_docker_mounts | default({})).get('postgresql', {}) }}"
role_regards_init_nfs_workspaces_volume_loki_data: "{{ (group_docker_mounts | default({})).get('loki', {}) }}"
role_regards_init_nfs_workspaces_volume_prometheus_data: "{{ (group_docker_mounts | default({})).get('prometheus', {}) }}"
role_regards_init_nfs_workspaces_volume_grafana_data: "{{ (group_docker_mounts | default({})).get('grafana', {}) }}"

role_regards_init_nfs_workspaces_top_level_volumes: "{{ (group_docker_mounts | default({})).get('volumes', []) }}"
role_regards_init_nfs_workspaces_top_level_regards: "{{  (group_docker_mounts | default({})).get('regards', {}) }}"

role_regards_init_nfs_workspaces_volume_data_inputs: "{{  role_regards_init_nfs_workspaces_top_level_regards.get('data_inputs', []) }}"

role_regards_init_nfs_workspaces_volume_processing: "{{  role_regards_init_nfs_workspaces_top_level_regards.get('processing', {}) }}"
role_regards_init_nfs_workspaces_volume_dam: "{{  role_regards_init_nfs_workspaces_top_level_regards.get('dam', {}) }}"
role_regards_init_nfs_workspaces_volume_dam_attachment_input: "{{ role_regards_init_nfs_workspaces_top_level_regards.get('storage', {}).get('dataset_attachment', {}) }}"
role_regards_init_nfs_workspaces_volume_storage_online: "{{  role_regards_init_nfs_workspaces_top_level_regards.get('storage', {}).get('online', {}) }}"
role_regards_init_nfs_workspaces_volume_storage_cache: "{{  role_regards_init_nfs_workspaces_top_level_regards.get('storage', {}).get('cache', {}) }}"

role_regards_init_nfs_workspaces_volume_workspace: "{{  role_regards_init_nfs_workspaces_top_level_regards.get('workspace', {}) }}"
role_regards_init_nfs_workspaces_volume_logs: "{{  role_regards_init_nfs_workspaces_top_level_regards.get('logs', {}) }}"

role_regards_init_nfs_workspaces_volume_plugins: "{{ (group_docker_mounts | default({})).get('regards', {}).get('plugins', {}) }}"

role_regards_init_nfs_workspaces_volume_mservices_logs:
  - config
  - registry
  - gateway
  - admin-instance
  - admin
  - authentication
  - dam
  - notifier
  - fem
  - catalog
  - access-instance
  - access-project
  - storage
  - order
  - processing
  - ingest
  - dataprovider
  - worker-manager
  - lta-manager
  - delivery
  - file-catalog
  - file-access
  - file-packager
  - front

role_regards_init_nfs_workspaces_microservice_having_plugin:
  - authentication
  - dam
  - fem
  - notifier
  - catalog
  - storage
  - ingest
  - dataprovider
  - processing
