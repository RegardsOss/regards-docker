##############################################
# Data management microservice configuration  #
##############################################
# Swagger
regards.swagger.api-name={{ role_regards_mconfig_swagger.dam.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.dam.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.dam.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'

# Elasticsearch
regards.elasticsearch.hosts={{ role_regards_mconfig_elastic.hosts }}
regards.elasticsearch.host={{ role_regards_mconfig_elastic.host }}
regards.elasticsearch.http.port={{ role_regards_mconfig_elastic.port }}

# Elasticsearch actuator healthcheck
spring.elasticsearch.rest.uris={{ role_regards_mconfig_elastic.host }}:{{ role_regards_mconfig_elastic.port }}

{% if not role_regards_mconfig_mservice_legacy_spring|bool %}
# Disable spring elasticsearch healthcheck
management.health.elasticsearch.enabled=false
{% endif %}

# Local storage to store all document files
regards.dam.local_storage.path=/storage

# Storage plugin. Allow to store files associated to DAM entities to STORAGE microservice.
regards.dam.store.files=false
regards.dam.store.files.plugin.storage.name=
regards.dam.store.files.plugin.storage.subdirectory=
regards.ingester.rate.init.ms={{ role_regards_mconfig_dam.crawler_init_time_ms }}
regards.ingester.rate.ms={{ role_regards_mconfig_dam.ingester_rate_ms }}

# Input path for attachment files (folder mounted by dam and storage)
regards.dam.attachment.inputs.path=/dataset-attachments-input

# Crawler page size
regards.crawler.max.bulk.size={{ role_regards_mconfig_dam.crawler_batch_size }}

# Feature manager datasource plugin
regards.feature.datasource.plugin.refreshRate=120

# Database
regards.jpa.multitenant.minPoolSize={{ role_regards_mconfig_dam.database_min_pool_size }}
regards.jpa.multitenant.maxPoolSize={{ role_regards_mconfig_dam.database_max_pool_size }}

# Geometry management
regards.geometry.check.polygon.orientation={{ role_regards_mconfig_dam.check_polygon_orientation }}

# Feign configuration
regards.enable.feign.readTimeout={{ role_regards_mconfig_dam.http_read_timeout }}
