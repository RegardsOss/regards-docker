##############################################
# Administration microservice configuration  #
##############################################
# Swagger
regards.swagger.api-name={{ role_regards_mconfig_swagger.admin.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.admin.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.admin.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'

# Administration accounts parameters
regards.project.account_acceptance=auto-accept

# Instance account properties
regards.accounts.root.user.login={{ role_regards_mconfig_instance_admin.username }}

# Notification scheduler rate cron expressions
# Every day at 12h00
regards.notification.cron.daily=0 0 12 * * *
# Every monday at 12h00
regards.notification.cron.weekly=0 0 12 ? * MON
# Every first monday of the month at 12h00
regards.notification.cron.monthly=0 0 12 1-7 * MON
# 5am every day
purge.cron.expression=0 0 5 * * ?

# Database
{% if (role_regards_mconfig_mservices.admin | default({})).get('configuration', {}).database_min_pool_size is defined %}
regards.jpa.multitenant.minPoolSize={{ role_regards_mconfig_mservices.admin.configuration.database_min_pool_size }}
{% endif %}
{% if (role_regards_mconfig_mservices.admin | default({})).get('configuration', {}).database_max_pool_size is defined %}
regards.jpa.multitenant.maxPoolSize={{ role_regards_mconfig_mservices.admin.configuration.database_max_pool_size }}
{% endif %}
