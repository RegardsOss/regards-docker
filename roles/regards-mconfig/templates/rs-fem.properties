##############################################
# Feature management microservice configuration  #
##############################################
# Swagger
regards.swagger.api-name={{ role_regards_mconfig_swagger.fem.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.fem.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.fem.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'

# Batch properties
spring.jpa.properties.hibernate.jdbc.batch_size=1024
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

# Metrics
regards.feature.metrics.enabled=true
management.metrics.export.elastic.host={{ role_regards_mconfig_elastic.host }}:{{ role_regards_mconfig_elastic.port }}
management.metrics.export.elastic.enabled=false
management.metrics.export.logging.enabled=false

# Scheduler
spring.task.scheduling.pool.size=2

# Database
{% if (role_regards_mconfig_mservices.fem | default({})).get('configuration', {}).min_pool_size is defined %}
regards.jpa.multitenant.minPoolSize={{ role_regards_mconfig_mservices.fem.configuration.min_pool_size }}
{% endif %}
{% if (role_regards_mconfig_mservices.fem | default({})).get('configuration', {}).max_pool_size is defined %}
regards.jpa.multitenant.maxPoolSize={{ role_regards_mconfig_mservices.fem.configuration.max_pool_size }}
{% endif %}