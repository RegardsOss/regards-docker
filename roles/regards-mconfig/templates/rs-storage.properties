##############################################
# Storage microservice configuration         #
##############################################
#### Swagger ####
regards.swagger.api-name={{ role_regards_mconfig_swagger.storage.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.storage.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.storage.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'

#### Cache size limits ####
regards.storage.cache.size.limit.ko.per.tenant=100000000
#### Data storage monitoring (86400000 ms = 24h) ####
regards.storage.check.data.storage.disk.usage.rate=600000
#### Cache scheduled actions rate ####
regards.cache.cleanup.rate.ms=120000
#### Job specific properties ####
regards.jobs.pool.size=2
regards.jobs.completion.update.rate.ms=1000
regards.jobs.succeeded.retention.days=1
regards.jobs.failed.retention.days=30
#### Scheduler ####
spring.task.scheduling.pool.size=6

### Storage requests expiration limits
regards.storage.reference.requests.days.before.expiration=5
regards.storage.storage.requests.days.before.expiration=5
regards.storage.deletion.requests.days.before.expiration=5
regards.storage.copy.requests.days.before.expiration=5

regards.jpa.multitenant.maxPoolSize=10

### Storage quota limits and sync
regards.storage.rate.expiration.tick={{ role_regards_mconfig_storage.rate_expiration_tick }}
regards.storage.quota.sync.tick={{ role_regards_mconfig_storage.quota_sync_tick }}
regards.storage.quota.report.tick={{ role_regards_mconfig_storage.quota_error_report_tick }}

### Storage cache location to restore nearline files
regards.storage.cache.path=/cache

# Database
{% if (role_regards_mconfig_mservices.storage | default({})).get('configuration', {}).min_pool_size is defined %}
regards.jpa.multitenant.minPoolSize={{ role_regards_mconfig_mservices.storage.configuration.min_pool_size }}
{% endif %}
{% if (role_regards_mconfig_mservices.storage | default({})).get('configuration', {}).max_pool_size is defined %}
regards.jpa.multitenant.maxPoolSize={{ role_regards_mconfig_mservices.storage.configuration.max_pool_size }}
{% endif %}