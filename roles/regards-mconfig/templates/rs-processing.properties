#####################################
# Processing microservice configuration  #
#####################################

spring.main.web-application-type=servlet
#reactor.netty.http.server.accessLogEnabled=true

# Swagger
regards.swagger.api-name={{ role_regards_mconfig_swagger.processing.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.processing.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.processing.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'

# Processing job engine configuration
regards.jobs.pool.size=50
# Job completion expected at 100h
regards.jobs.completion.update.rate.ms=360000000
# Job specific properties
regards.jobs.succeeded.retention.days=1
regards.jobs.failed.retention.days=30

{% if role_regards_mconfig_mservice_use_ungranular_workspace_on_workdir_network %}
regards.processing.sharedStorage.basePath={{ role_regards_mconfig_mservice_use_ungranular_workspace_on_workdir_network_path }}/processing/ouput
regards.processing.executionWorkdir.basePath={{ role_regards_mconfig_mservice_use_ungranular_workspace_on_workdir_network_path }}/pocessing/exec
{% else %}
regards.processing.sharedStorage.basePath=/processing/output
regards.processing.executionWorkdir.basePath=/processing/exec
{% endif %}

regards.processing.r2dbc.host={{ role_regards_mconfig_postgres.project.host }}
regards.processing.r2dbc.port={{ role_regards_mconfig_postgres.project.port }}
regards.processing.r2dbc.username={{ role_regards_mconfig_postgres.project.user }}
regards.processing.r2dbc.password={{ role_regards_mconfig_postgres.project.password }}
regards.processing.r2dbc.dbname=rs_instance
# R2DBC does not creates the schema if not exists. So cuurently we use public
regards.processing.r2dbc.schema=public
