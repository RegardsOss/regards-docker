#####################################
# Order microservice configuration  #
#####################################

# Jetty configuration
jetty.threadPool.maxThreads={{ role_regards_mconfig_order.jetty_threadpool_max }}
jetty.threadPool.idleTimeout={{ role_regards_mconfig_order.jetty_threadpool_idle_timeout }}

# Swagger
regards.swagger.api-name={{ role_regards_mconfig_swagger.order.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.order.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.order.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'

# Order specific properties
regards.jobs.completion.update.rate.ms=2500
regards.order.files.bucket.size.Mb={{ role_regards_mconfig_mservice_order_suborder_max_size_mb }}
regards.order.validation.period.days=3
regards.order.days.before.considering.order.as.aside=7
regards.order.secret={{ role_regards_mconfig_mservice_order_jwt_secret }}
regards.order.files.displayable.maximum=5000
regards.order.max.storage.files.jobs.per.user={{ role_regards_mconfig_mservice_order_max_suborders_per_user }}
regards.order.periodic.files.availability.check.cron=0 0 7 * * MON-FRI

# Job specific properties
regards.jobs.succeeded.retention.days=1
regards.jobs.failed.retention.days=30
regards.jobs.pool.size={{ role_regards_mconfig_order.jobs_pool_size }}

# Database
regards.jpa.multitenant.minPoolSize={{ role_regards_mconfig_order.database_min_pool_size }}
regards.jpa.multitenant.maxPoolSize={{ role_regards_mconfig_order.database_max_pool_size }}

# Optimization
regards.order.batch.size={{ role_regards_mconfig_order.entities_per_job }}
