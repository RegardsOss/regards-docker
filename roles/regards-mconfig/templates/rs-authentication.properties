########################################
# Authentication microservice configuration   #
########################################

# Jetty configuration
jetty.threadPool.maxThreads={{ role_regards_mconfig_authentication.jetty_threadpool_max }}
jetty.threadPool.idleTimeout={{ role_regards_mconfig_authentication.jetty_threadpool_idle_timeout }}

# Swagger
regards.swagger.api-name={{ role_regards_mconfig_swagger.authentication.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.authentication.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.authentication.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'

# Regards authentication module configuration
regards.authentication.granttype=password
regards.authentication.client.user=client
regards.authentication.client.secret=secret

# Instance account properties
regards.accounts.root.user.login={{ role_regards_mconfig_instance_admin.username }}

# Database
{% if (role_regards_mconfig_mservices.authentication | default({})).get('configuration', {}).database_min_pool_size is defined %}
regards.jpa.multitenant.minPoolSize={{ role_regards_mconfig_authentication.database_min_pool_size }}
{% endif %}
{% if (role_regards_mconfig_mservices.authentication | default({})).get('configuration', {}).database_max_pool_size is defined %}
regards.jpa.multitenant.maxPoolSize={{ role_regards_mconfig_authentication.database_max_pool_size }}
{% endif %}