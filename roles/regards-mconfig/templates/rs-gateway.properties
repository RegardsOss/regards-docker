{% if role_regards_mconfig_legacy_spring|bool %}
########################################
# Gateway microservice configuration   #
########################################
# Configure zuul
zuul.prefix=/api/v1
zuul.add-host-header=true
# Allow 'Authorization' header to pass through Zuul
zuul.sensitiveHeaders=Cookie,Set-Cookie
zuul.ignored-headers=Access-Control-Allow-Origin, Access-Control-Allow-Methods, Access-Control-Allow-Headers,Access-Control-Max-Age, Date
# Let upstream microservice handle security headers like cache control
zuul.ignore-security-headers=false
# CORS policy
regards.gateway.cors.mappings.[/api/**].allowedOrigins=*
# Default values
#regards.gateway.cors.mappings.[/api/**].allowedHeaders=authorization,content-type,scope
#regards.gateway.cors.mappings.[/api/**].allowedMethods=OPTIONS,HEAD,GET,PUT,POST,DELETE,PATCH
#regards.gateway.cors.mappings.[/api/**].maxAge=3600
#regards.gateway.cors.mappings.[/api/**].allowCredentials=true

# Ribbon hystrix timeout configuration
ribbon.ReadTimeout=60000
ribbon.ConnectTimeout=10000
server.connection-timeout=-1
# Allow long session for order downloads.
hystrix.command.rs-order.execution.isolation.thread.timeoutInMilliseconds=3603000

# Swagger OAS3
{% set url_id = 0 %}
{% if role_regards_mconfig_mservices.access_project is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.access_project.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-access-project/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.access_instance is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.access_instance.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-access-instance/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.admin is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.admin.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-admin/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.admin_instance is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.admin_instance.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-admin-instance/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.authentication is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.authentication.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-authentication/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.catalog is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.catalog.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-catalog/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.dam is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.dam.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-dam/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.dataprovider is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.dataprovider.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-dataprovider/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.fem is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.fem.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-fem/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.ingest is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.ingest.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-ingest/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.notifier is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.notifier.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-notifier/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.order is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.order.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-order/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.storage is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.storage.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-storage/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.processing is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.processing.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-processing/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}
{% if role_regards_mconfig_mservices.worker_manager is defined %}
springdoc.swagger-ui.urls[{{ url_id }}].name={{ role_regards_mconfig_swagger.worker_manager.name }}
springdoc.swagger-ui.urls[{{ url_id }}].url=${zuul.prefix}/rs-worker-manager/v3/api-docs
{% set url_id = url_id + 1 %}
{% endif %}

# Below are routes that could be access on microservices directly but for security reasons 
# they are redirected using fake serviceId to limit access.
zuul.routes.rs-dam-public1.path=/rs-dam-public/**/models/attributes
zuul.routes.rs-dam-public1.stripPrefix=true
zuul.routes.rs-dam-public1.serviceId=rs-dam
zuul.routes.rs-dam-public2.path=/rs-dam-public/**/models/*/attributes
zuul.routes.rs-dam-public2.stripPrefix=true
zuul.routes.rs-dam-public2.serviceId=rs-dam
zuul.routes.rs-dam-public3.path=/rs-dam-public/**/models/attributes/modeltype/*
zuul.routes.rs-dam-public3.stripPrefix=true
zuul.routes.rs-dam-public3.serviceId=rs-dam

zuul.routes.rs-admin-instance-public1.path=/rs-admin-instance-public/**/projects/*
zuul.routes.rs-admin-instance-public1.stripPrefix=true
zuul.routes.rs-admin-instance-public1.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public2.path=/rs-admin-instance-public/**/accounts/password
zuul.routes.rs-admin-instance-public2.stripPrefix=true
zuul.routes.rs-admin-instance-public2.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public3.path=/rs-admin-instance-public/**/notifications
zuul.routes.rs-admin-instance-public3.stripPrefix=true
zuul.routes.rs-admin-instance-public3.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public4.path=/rs-admin-instance-public/**/notifications/*
zuul.routes.rs-admin-instance-public4.stripPrefix=true
zuul.routes.rs-admin-instance-public4.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public5.path=/rs-admin-instance-public/**/notifications/*/read
zuul.routes.rs-admin-instance-public5.stripPrefix=true
zuul.routes.rs-admin-instance-public5.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public6.path=/rs-admin-instance-public/**/notifications/read/delete
zuul.routes.rs-admin-instance-public6.stripPrefix=true
zuul.routes.rs-admin-instance-public6.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public7.path=/rs-admin-instance-public/**/notifications/all/read
zuul.routes.rs-admin-instance-public7.stripPrefix=true
zuul.routes.rs-admin-instance-public7.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public8.path=/rs-admin-instance-public/**/notifications/*/read
zuul.routes.rs-admin-instance-public8.stripPrefix=true
zuul.routes.rs-admin-instance-public8.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public9.path=/rs-admin-instance-public/**/accounts/*/resetPassword
zuul.routes.rs-admin-instance-public9.stripPrefix=true
zuul.routes.rs-admin-instance-public9.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public10.path=/rs-admin-instance-public/**/accounts/*/changePassword
zuul.routes.rs-admin-instance-public10.stripPrefix=true
zuul.routes.rs-admin-instance-public10.serviceId=rs-admin-instance
zuul.routes.rs-admin-instance-public11.path=/rs-admin-instance-public/**/accounts/*/unlockAccount
zuul.routes.rs-admin-instance-public11.stripPrefix=true
zuul.routes.rs-admin-instance-public11.serviceId=rs-admin-instance

zuul.routes.rs-admin-public1.path=/rs-admin-public/**/resources
zuul.routes.rs-admin-public1.stripPrefix=true
zuul.routes.rs-admin-public1.serviceId=rs-admin
zuul.routes.rs-admin-public2.path=/rs-admin-public/**/roles/borrowables
zuul.routes.rs-admin-public2.stripPrefix=true
zuul.routes.rs-admin-public2.serviceId=rs-admin
zuul.routes.rs-admin-public3.path=/rs-admin-public/**/notifications
zuul.routes.rs-admin-public3.stripPrefix=true
zuul.routes.rs-admin-public3.serviceId=rs-admin
zuul.routes.rs-admin-public4.path=/rs-admin-public/**/notifications/*
zuul.routes.rs-admin-public4.stripPrefix=true
zuul.routes.rs-admin-public4.serviceId=rs-admin
zuul.routes.rs-admin-public5.path=/rs-admin-public/**/notifications/*/read
zuul.routes.rs-admin-public5.stripPrefix=true
zuul.routes.rs-admin-public5.serviceId=rs-admin
zuul.routes.rs-admin-public6.path=/rs-admin-public/**/notifications/read/delete
zuul.routes.rs-admin-public6.stripPrefix=true
zuul.routes.rs-admin-public6.serviceId=rs-admin
zuul.routes.rs-admin-public7.path=/rs-admin-public/**/notifications/all/read
zuul.routes.rs-admin-public7.stripPrefix=true
zuul.routes.rs-admin-public7.serviceId=rs-admin
zuul.routes.rs-admin-public8.path=/rs-admin-public/**/notifications/*/read
zuul.routes.rs-admin-public8.stripPrefix=true
zuul.routes.rs-admin-public8.serviceId=rs-admin
zuul.routes.rs-admin-public9.path=/rs-admin-public/**/users/myuser
zuul.routes.rs-admin-public9.stripPrefix=true
zuul.routes.rs-admin-public9.serviceId=rs-admin
zuul.routes.rs-admin-public10.path=/rs-admin-public/**/accesses
zuul.routes.rs-admin-public10.stripPrefix=true
zuul.routes.rs-admin-public10.serviceId=rs-admin
zuul.routes.rs-admin-public11.path=/rs-admin-public/**/accesses/verifyEmail/*
zuul.routes.rs-admin-public11.stripPrefix=true
zuul.routes.rs-admin-public11.serviceId=rs-admin
zuul.routes.rs-admin-public12.path=/rs-admin-public/**/accesses/settings
zuul.routes.rs-admin-public12.stripPrefix=true
zuul.routes.rs-admin-public12.serviceId=rs-admin
zuul.routes.rs-admin-public13.path=/rs-admin-public/**/license
zuul.routes.rs-admin-public13.stripPrefix=true
zuul.routes.rs-admin-public13.serviceId=rs-admin

{% else %}
########################################
# Gateway microservice configuration   #
########################################

# Default values
server.jetty.connection-idle-timeout=30000

# Spring cloud gateway configuration
# gateway timeout configuration
spring.cloud.gateway.httpclient.connect-timeout=10000
spring.cloud.gateway.httpclient.response-timeout=60s

# enable registry support for routing
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.x-forwarded.for-enabled=true

# CORS policy
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers[0]=authorization
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers[1]=content-type
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers[2]=scope
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers[3]=X-Forwarded-Host
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers[4]=X-Forwarded-For
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers[5]=X-Forwarded-Proto
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods[0]=OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods[1]=HEAD
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods[2]=GET
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods[3]=PUT
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods[4]=POST
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods[5]=DELETE
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods[6]=PATCH
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# Routes
prefix.path=/api/v1

# remove sensitive headers
spring.cloud.gateway.default-filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.default-filters[1]=RemoveRequestHeader=Set-Cookie
spring.cloud.gateway.default-filters[2]=RemoveResponseHeader=Cookie
spring.cloud.gateway.default-filters[3]=RemoveResponseHeader=Set-Cookie

# configure route mapping

#####################
### PUBLIC ROUTES ###
#####################

# Below are routes that could be access on microservices directly but for security reasons they are to be redirected using fake serviceId to limit access.
# model attributes route
## RS-DAM
spring.cloud.gateway.routes[0].id=rs-dam-model-attributes
spring.cloud.gateway.routes[0].uri=lb://rs-dam
spring.cloud.gateway.routes[0].predicates[0]=Path=${prefix.path}/rs-dam-public/models/attributes
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=3

# model per id attribute route
spring.cloud.gateway.routes[1].id=rs-dam-model-attributes-id
spring.cloud.gateway.routes[1].uri=lb://rs-dam
spring.cloud.gateway.routes[1].predicates[0]=Path=${prefix.path}/rs-dam-public/models/*/attributes
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=3

# model type attribute route
spring.cloud.gateway.routes[2].id=rs-dam-model-type
spring.cloud.gateway.routes[2].uri=lb://rs-dam
spring.cloud.gateway.routes[2].predicates[0]=Path=${prefix.path}/rs-dam-public/models/attributes/modeltype/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=3

## RS-ADMIN-INSTANCE
# admin instance projects route
spring.cloud.gateway.routes[3].id=rs-admin-instance-projects
spring.cloud.gateway.routes[3].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[3].predicates[0]=Path=${prefix.path}/rs-admin-instance-public/projects/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=3

# admin instance password route
spring.cloud.gateway.routes[4].id=rs-admin-instance-password
spring.cloud.gateway.routes[4].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[4].predicates[0]=Path=${prefix.path}/rs-admin-instance-public/accounts/password
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=3

# admin instance change password route
spring.cloud.gateway.routes[5].id=rs-admin-instance-change-password
spring.cloud.gateway.routes[5].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[5].predicates[0]=Path=${prefix.path}/rs-admin-instance-public/accounts/*/changePassword
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=3

# admin instance notifications route
spring.cloud.gateway.routes[6].id=rs-admin-instance-notifications
spring.cloud.gateway.routes[6].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[6].predicates[0]=Path=${prefix.path}/rs-admin-instance-public/notifications
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=3

# admin instance notifications id route
spring.cloud.gateway.routes[7].id=rs-admin-instance-notifications-id
spring.cloud.gateway.routes[7].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[7].predicates[0]=Path=${prefix.path}/rs-admin-instance-public/notifications/**
spring.cloud.gateway.routes[7].filters[0]=StripPrefix=3

# admin instance notifications read route
spring.cloud.gateway.routes[8].id=rs-admin-instance-notifications-read
spring.cloud.gateway.routes[8].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[8].predicates[0]=Path=${prefix.path}/rs-admin-instance-public/notifications/*/read
spring.cloud.gateway.routes[8].filters[0]=StripPrefix=3

# admin instance notifications delete route
spring.cloud.gateway.routes[9].id=rs-admin-instance-notifications-delete
spring.cloud.gateway.routes[9].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[9].predicates[0]=Path=${prefix.path}/rs-admin-instance-public/notifications/read/delete
spring.cloud.gateway.routes[9].filters[0]=StripPrefix=3

# admin instance notifications read all route
spring.cloud.gateway.routes[10].id=rs-admin-instance-notifications-read-all
spring.cloud.gateway.routes[10].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[10].predicates[0]=Path=${prefix.path}/rs-admin-instance-public/notifications/all/read
spring.cloud.gateway.routes[10].filters[0]=StripPrefix=3

## RS-ADMIN
# admin resources route
spring.cloud.gateway.routes[11].id=rs-admin-resources
spring.cloud.gateway.routes[11].uri=lb://rs-admin
spring.cloud.gateway.routes[11].predicates[0]=Path=${prefix.path}/rs-admin-public/resources
spring.cloud.gateway.routes[11].filters[0]=StripPrefix=3

# admin roles route
spring.cloud.gateway.routes[12].id=rs-admin-roles
spring.cloud.gateway.routes[12].uri=lb://rs-admin
spring.cloud.gateway.routes[12].predicates[0]=Path=${prefix.path}/rs-admin-public/roles/borrowables
spring.cloud.gateway.routes[12].filters[0]=StripPrefix=3

# admin notifications route
spring.cloud.gateway.routes[13].id=rs-admin-notifications
spring.cloud.gateway.routes[13].uri=lb://rs-admin
spring.cloud.gateway.routes[13].predicates[0]=Path=${prefix.path}/rs-admin-public/notifications
spring.cloud.gateway.routes[13].filters[0]=StripPrefix=3

# admin notifications id route
spring.cloud.gateway.routes[14].id=rs-admin-notifications-id
spring.cloud.gateway.routes[14].uri=lb://rs-admin
spring.cloud.gateway.routes[14].predicates[0]=Path=${prefix.path}/rs-admin-public/notifications/**
spring.cloud.gateway.routes[14].filters[0]=StripPrefix=3

# admin notifications read route
spring.cloud.gateway.routes[15].id=rs-admin-notifications-read
spring.cloud.gateway.routes[15].uri=lb://rs-admin
spring.cloud.gateway.routes[15].predicates[0]=Path=${prefix.path}/rs-admin-public/notifications/*/read
spring.cloud.gateway.routes[15].filters[0]=StripPrefix=3

# admin notifications delete route
spring.cloud.gateway.routes[16].id=rs-admin-notifications-delete
spring.cloud.gateway.routes[16].uri=lb://rs-admin
spring.cloud.gateway.routes[16].predicates[0]=Path=${prefix.path}/rs-admin-public/notifications/read/delete
spring.cloud.gateway.routes[16].filters[0]=StripPrefix=3

# admin notifications read all route
spring.cloud.gateway.routes[17].id=rs-admin-notifications-read-all
spring.cloud.gateway.routes[17].uri=lb://rs-admin
spring.cloud.gateway.routes[17].predicates[0]=Path=${prefix.path}/rs-admin-public/notifications/all/read
spring.cloud.gateway.routes[17].filters[0]=StripPrefix=3

# admin users route
spring.cloud.gateway.routes[18].id=rs-admin-users
spring.cloud.gateway.routes[18].uri=lb://rs-admin
spring.cloud.gateway.routes[18].predicates[0]=Path=${prefix.path}/rs-admin-public/users/myuser
spring.cloud.gateway.routes[18].filters[0]=StripPrefix=3

# admin accesses route
spring.cloud.gateway.routes[19].id=rs-admin-accesses
spring.cloud.gateway.routes[19].uri=lb://rs-admin
spring.cloud.gateway.routes[19].predicates[0]=Path=${prefix.path}/rs-admin-public/accesses
spring.cloud.gateway.routes[19].filters[0]=StripPrefix=3

# admin accesses route
spring.cloud.gateway.routes[20].id=rs-admin-accesses-email
spring.cloud.gateway.routes[20].uri=lb://rs-admin
spring.cloud.gateway.routes[20].predicates[0]=Path=${prefix.path}/rs-admin-public/accesses/verifyEmail/**
spring.cloud.gateway.routes[20].filters[0]=StripPrefix=3

# admin accesses route
spring.cloud.gateway.routes[21].id=rs-admin-accesses-settings
spring.cloud.gateway.routes[21].uri=lb://rs-admin
spring.cloud.gateway.routes[21].predicates[0]=Path=${prefix.path}/rs-admin-public/accesses/settings
spring.cloud.gateway.routes[21].filters[0]=StripPrefix=3

# to redirect specific url follow the example below
spring.cloud.gateway.routes[22].id=redirect-example
spring.cloud.gateway.routes[22].uri=http://172.26.46.158:8080/
spring.cloud.gateway.routes[22].predicates[0]=Path=${prefix.path}/redirect
spring.cloud.gateway.routes[22].filters[0]=RedirectTo=302,http://172.26.46.158:8080/
spring.cloud.gateway.routes[22].filters[1]=StripPrefix=3

####################
### ADMIN ROUTES ###
####################

# access instance
spring.cloud.gateway.routes[23].id=rs-access-instance
spring.cloud.gateway.routes[23].uri=lb://rs-access-instance
spring.cloud.gateway.routes[23].predicates[0]=Path=${prefix.path}/rs-access-instance/**
spring.cloud.gateway.routes[23].filters[0]=StripPrefix=3

# access project
spring.cloud.gateway.routes[24].id=rs-access-project
spring.cloud.gateway.routes[24].uri=lb://rs-access-project
spring.cloud.gateway.routes[24].predicates[0]=Path=${prefix.path}/rs-access-project/**
spring.cloud.gateway.routes[24].filters[0]=StripPrefix=3

# admin route
spring.cloud.gateway.routes[25].id=rs-admin
spring.cloud.gateway.routes[25].uri=lb://rs-admin
spring.cloud.gateway.routes[25].predicates[0]=Path=${prefix.path}/rs-admin/**
spring.cloud.gateway.routes[25].filters[0]=StripPrefix=3

# admin instance route
spring.cloud.gateway.routes[26].id=rs-admin-instance
spring.cloud.gateway.routes[26].uri=lb://rs-admin-instance
spring.cloud.gateway.routes[26].predicates[0]=Path=${prefix.path}/rs-admin-instance/**
spring.cloud.gateway.routes[26].filters[0]=StripPrefix=3

# authentication route
spring.cloud.gateway.routes[27].id=rs-authentication
spring.cloud.gateway.routes[27].uri=lb://rs-authentication
spring.cloud.gateway.routes[27].predicates[0]=Path=${prefix.path}/rs-authentication/**
spring.cloud.gateway.routes[27].filters[0]=StripPrefix=3

# catalog route
spring.cloud.gateway.routes[28].id=rs-catalog
spring.cloud.gateway.routes[28].uri=lb://rs-catalog
spring.cloud.gateway.routes[28].predicates[0]=Path=${prefix.path}/rs-catalog/**
spring.cloud.gateway.routes[28].filters[0]=StripPrefix=3

# dam route
spring.cloud.gateway.routes[29].id=rs-dam
spring.cloud.gateway.routes[29].uri=lb://rs-dam
spring.cloud.gateway.routes[29].predicates[0]=Path=${prefix.path}/rs-dam/**
spring.cloud.gateway.routes[29].filters[0]=StripPrefix=3

# fem route
spring.cloud.gateway.routes[30].id=rs-fem
spring.cloud.gateway.routes[30].uri=lb://rs-fem
spring.cloud.gateway.routes[30].predicates[0]=Path=${prefix.path}/rs-fem/**
spring.cloud.gateway.routes[30].filters[0]=StripPrefix=3

# ingest route
spring.cloud.gateway.routes[31].id=rs-ingest
spring.cloud.gateway.routes[31].uri=lb://rs-ingest
spring.cloud.gateway.routes[31].predicates[0]=Path=${prefix.path}/rs-ingest/**
spring.cloud.gateway.routes[31].filters[0]=StripPrefix=3

# notifier route
spring.cloud.gateway.routes[32].id=rs-notifier
spring.cloud.gateway.routes[32].uri=lb://rs-notifier
spring.cloud.gateway.routes[32].predicates[0]=Path=${prefix.path}/rs-notifier/**
spring.cloud.gateway.routes[32].filters[0]=StripPrefix=3

# order route
spring.cloud.gateway.routes[33].id=rs-order
spring.cloud.gateway.routes[33].uri=lb://rs-order
spring.cloud.gateway.routes[33].predicates[0]=Path=${prefix.path}/rs-order/**
spring.cloud.gateway.routes[33].filters[0]=StripPrefix=3

# processing route
spring.cloud.gateway.routes[34].id=rs-processing
spring.cloud.gateway.routes[34].uri=lb://rs-processing
spring.cloud.gateway.routes[34].predicates[0]=Path=${prefix.path}/rs-processing/**
spring.cloud.gateway.routes[34].filters[0]=StripPrefix=3

# storage route
spring.cloud.gateway.routes[35].id=rs-storage
spring.cloud.gateway.routes[35].uri=lb://rs-storage
spring.cloud.gateway.routes[35].predicates[0]=Path=${prefix.path}/rs-storage/**
spring.cloud.gateway.routes[35].filters[0]=StripPrefix=3

# dataprovider route
spring.cloud.gateway.routes[36].id=rs-dataprovider
spring.cloud.gateway.routes[36].uri=lb://rs-dataprovider
spring.cloud.gateway.routes[36].predicates[0]=Path=${prefix.path}/rs-dataprovider/**
spring.cloud.gateway.routes[36].filters[0]=StripPrefix=3

# worker manager route
spring.cloud.gateway.routes[37].id=rs-worker-manager
spring.cloud.gateway.routes[37].uri=lb://rs-worker-manager
spring.cloud.gateway.routes[37].predicates[0]=Path=${prefix.path}/rs-worker-manager/**
spring.cloud.gateway.routes[37].filters[0]=StripPrefix=3

## REDIRECTION EXAMPLE
# to redirect specific url follow the example below
#spring.cloud.gateway.routes[37].id=redirect-example
#spring.cloud.gateway.routes[37].uri=https://example.com
#spring.cloud.gateway.routes[37].predicates[0]=Path=${prefix.path}/redirectPath
#spring.cloud.gateway.routes[37].filters[0]=RedirectTo=302, https://example.com
{% endif %}
