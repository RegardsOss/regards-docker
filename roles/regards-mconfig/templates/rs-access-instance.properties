#######################################
# Access Microservice configuration   #
#######################################
# Swagger
regards.swagger.api-name={{ role_regards_mconfig_swagger.access_instance.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.access_instance.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.access_instance.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'
regards.swagger.instance=true

# Instance DAO Configuration
regards.jpa.instance.datasource.url=jdbc:postgresql://{{ role_regards_mconfig_postgres.instance_db.host }}:{{ role_regards_mconfig_postgres.instance_db.port }}/{{ role_regards_mconfig_postgres.instance_db.db }}
regards.jpa.instance.datasource.user-name={{ role_regards_mconfig_postgres.instance_db.user }}
regards.jpa.instance.datasource.password={{ role_regards_mconfig_postgres.instance_db.password }}
regards.jpa.instance.datasource.driverClassName=org.postgresql.Driver
{% if role_regards_stack_mservices_access_instance_postgis_enabled|bool %}
regards.jpa.instance.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect
{% else %}
regards.jpa.instance.dialect=org.hibernate.dialect.PostgreSQLDialect
{% endif %}

# Indicates to all microservice that this instance is the multitenant version (not instance one)
regards.access.multitenant=false
# Enable security management for instance
regards.security.instance.voter.enabled=true
# Disable InstanceEntity annotation in regards-jpa-instance-starter.
regards.jpa.instance.disableInstanceEntityAnnotation=true

# Database
{% if (role_regards_mconfig_mservices.access_instance | default({})).get('configuration', {}).database_min_pool_size is defined %}
regards.jpa.instance.minPoolSize={{ role_regards_mconfig_mservices.access_instance.configuration.database_min_pool_size }}
{% endif %}
{% if (role_regards_mconfig_mservices.access_instance | default({})).get('configuration', {}).database_max_pool_size is defined %}
regards.jpa.instance.maxPoolSize={{ role_regards_mconfig_mservices.access_instance.configuration.database_max_pool_size }}
{% endif %}
