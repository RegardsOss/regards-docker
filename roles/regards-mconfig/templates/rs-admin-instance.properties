##############################################
# Administration Instance microservice configuration  #
##############################################
# Swagger
regards.swagger.api-name={{ role_regards_mconfig_swagger.admin_instance.name }}
regards.swagger.api-title={{ role_regards_mconfig_swagger.admin_instance.title }}
regards.swagger.api-description={{ role_regards_mconfig_swagger.admin_instance.description }}
regards.swagger.api-license={{ role_regards_mconfig_swagger_license }}
regards.swagger.api-version='@project.version@'
regards.swagger.instance=true

# Administration accounts parameters
regards.instance.account_acceptance=auto-accept

# Instance DAO Configuration
# Disable InstanceEntity annotation in regards-jpa-instance-starter.
regards.jpa.instance.disableInstanceEntityAnnotation=true
regards.jpa.instance.datasource.url=jdbc:postgresql://{{ role_regards_mconfig_postgres.instance_db.host }}:{{ role_regards_mconfig_postgres.instance_db.port }}/{{ role_regards_mconfig_postgres.instance_db.db }}
regards.jpa.instance.datasource.user-name={{ role_regards_mconfig_postgres.instance_db.user }}
regards.jpa.instance.datasource.password={{ role_regards_mconfig_postgres.instance_db.password }}
regards.jpa.instance.datasource.driverClassName=org.postgresql.Driver
regards.jpa.instance.dialect=org.hibernate.dialect.PostgreSQLDialect

#Default tenants
regards.default.tenants={{ role_regards_mconfig_config_mservices.init_project }}
# Instance account properties
regards.accounts.root.user.login={{ role_regards_mconfig_instance_admin.username }}
regards.accounts.root.user.password={{ role_regards_mconfig_instance_admin.password }}
# Passwords configuration
regards.accounts.password.regex=[a-z0-9]*
regards.accounts.password.rules=Password should contain lowercase letters or numbers
regards.accounts.password.validity.duration=350
regards.accounts.failed.authentication.max=5
# Accounts configuration
regards.accounts.validity.duration={{ role_regards_mconfig_instance_admin.account_validity_in_days }}
regards.accounts.validity.check.cron=0 * * * * ?
# Notification scheduler rate cron expressions
# Every day at 12h00
regards.notification.cron.daily=0 0 12 * * *
# Every monday at 12h00
regards.notification.cron.weekly=0 0 12 ? * MON
# Every first monday of the month at 12h00
regards.notification.cron.monthly=0 0 12 1-7 * MON
# 5am every day
purge.cron.expression=0 0 5 * * ?
# Email (MailProperties)
regards.mails.noreply.address={{ role_regards_mconfig_mail.noreply }}
spring.mail.host={{ role_regards_mconfig_mail.host }}
spring.mail.port={{ role_regards_mconfig_mail.port }}
spring.mail.username={{ role_regards_mconfig_mail.username }}
spring.mail.password={{ role_regards_mconfig_mail.password }}
# Security configuration
regards.microservice.type=instance

# Database
{% if (role_regards_mconfig_mservices.admin_instance | default({})).get('configuration', {}).min_pool_size is defined %}
regards.jpa.instance.minPoolSize={{ role_regards_mconfig_mservices.admin_instance.configuration.min_pool_size }}
{% endif %}
{% if (role_regards_mconfig_mservices.admin_instance | default({})).get('configuration', {}).max_pool_size is defined %}
regards.jpa.instance.maxPoolSize={{ role_regards_mconfig_mservices.admin_instance.configuration.max_pool_size }}
{% endif %}
