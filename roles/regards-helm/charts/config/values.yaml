#jinja2: trim_blocks: True, lstrip_blocks: True
# Default values for config.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#######################################
#                                     #
#          K8S configuration          #
#                                     #
#   Override values only.             #
#   See regards-common for defaults   #
#                                     #
#######################################

global:
  regards: 
    servicesVersion: "{{ regards_version }}"
    imageRegistry: "{{ group_docker_registry }}"
    imagePullPolicy: IfNotPresent
    imagePullSecrets:
      - name: regards-docker-registry
    jwtSecret: "{{ group_config_mservices.jwt_secret }}"
    cipherIV: "{{ group_config_mservices.cipher_iv }}"
    initProject: "{{ group_config_mservices.init_project }}"
    instanceAdmin:
      username: "{{ group_config_mservices.instance_admin.username }}"
      password: "{{ group_config_mservices.instance_admin.password }}"
    mail:
      host: "{{ group_config_mservices.mail.host }}"
      port: {{ group_config_mservices.mail.port }}
      username: "{{ group_config_mservices.mail.username }}"
      password: "{{ group_config_mservices.mail.password }}"
      noreply: "{{ group_config_mservices.mail.noreply }}"
    proxy:
      host: "{{ group_config_mservices.proxy.host }}"
      port: {{ group_config_mservices.proxy.port }}
      no_proxy: "{{ group_config_mservices.proxy.no_proxy }}"
    eureka:
      host: "{{ group_config_mservices.eureka.host }}"
      port: {{ group_config_mservices.eureka.port }}
    elastic:
      host: "{{ group_config_mservices.elastic.host }}"
      cluster: "{{ group_config_mservices.elastic.cluster }}"
      port: {{ group_config_mservices.elastic.port }}
    postgres:
      init_project:
        host: "{{ group_config_mservices.postgres.init_project.host }}"
        port: {{ group_config_mservices.postgres.init_project.port }}
        db: "{{ group_config_mservices.postgres.init_project.db }}"
        user: "{{ group_config_mservices.postgres.init_project.user }}"
        password: "{{ group_config_mservices.postgres.init_project.password }}"
      instance:
        host: "{{ group_config_mservices.postgres.instance.host }}"
        port: {{ group_config_mservices.postgres.instance.port }}
        db: "{{ group_config_mservices.postgres.instance.db }}"
        user: "{{ group_config_mservices.postgres.instance.user }}"
        password: "{{ group_config_mservices.postgres.instance.password }}"
    amqp:
      host: "{{ group_config_mservices.amqp.host }}"
      client: {{ group_config_mservices.amqp.client }}
      http: {{ group_config_mservices.amqp.http }}
      user: "{{ group_config_mservices.amqp.user }}"
      password: "{{ group_config_mservices.amqp.password }}"
    front:
      host: "{{ group_docker_mservices.front.host }}"
      port: {{ group_docker_mservices.front.port }}

image:
  tag: "{{ group_docker_mservices.config.tag }}"
  name: rs-config

volumes:
{% if config_maps %}
  configmaps:
  {% for config_map in config_maps %}
    - name: "{{ config_map.name }}"
  {% endfor %}
{% else %}
  configmaps: []
{% endif %}
  emptydirs:
    - name: tmpfs
      medium: Memory

volumeMounts:
{% if config_maps %}
  configmaps:
  {% for config_map in config_maps %}
    {% for path in config_map.paths %}
    - name: "{{ config_map.name }}"
      subPath: "{{ path.sub_path }}"
      mountPath: "{{ path.mount_path }}"
    {% endfor %}
  {% endfor %}
{% else %}
  configmaps: []
{% endif %}
  emptydirs:
    - name: tmpfs
      mountPath: /tmp

{% if group_docker_mservices.config.http is defined %}
ports:
  - name: http
    containerPort: {{ group_docker_mservices.config.http }}
    protocol: TCP
{% endif %}

livenessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 20
  timeoutSeconds: 10
  periodSeconds: 5

readinessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 5
  timeoutSeconds: 2
  periodSeconds: 5

service:
  type: ClusterIP
  ports:
    - name: http
      port: {{ group_docker_mservices.config.http }}
